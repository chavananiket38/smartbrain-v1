{"version":3,"sources":["components/navigation/brains.png","components/navigation/Navigation.js","components/imagelinkform/ImageLinkForm.js","components/imagelinkform/Rank.js","components/signin/SignIn.js","components/register/Register.js","components/faceRecognition/FaceRecognition.js","particleOption.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","route","style","display","margin","justifyContent","alignSelf","className","height","width","background","alt","src","brains","marginLeft","onClick","type","value","marginTop","marginBottom","ImageLinkForm","onInputChange","onbuttonSubmit","displa","onChange","color","fontSize","e","Rank","entries","name","SignIn","loadUser","useState","Email","setEmail","Password","setPassword","inputEl","useRef","onSubmit","preventDefault","stopPropagation","id","ref","htmlFor","event","target","fetch","method","headers","body","JSON","stringify","email","password","then","res","json","user","current","innerHTML","textDecorationLine","textDecorationStyle","href","Register","Name","setName","FaceRecognition","imageUrl","faces","box","map","face","i","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","options","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","move","direction","outMode","random","speed","straight","number","density","area","shape","detectRetina","App","props","data","setState","joined","particlesInit","main","particlesLoaded","container","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","input","state","count","Object","assign","catch","err","console","log","init","this","loaded","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cdf883c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brains.6ee51e4d.png\";","import React from \"react\";\r\nimport Tilty from \"react-tilty\";\r\nimport 'tachyons';\r\nimport brains from \"./brains.png\";\r\n\r\n\r\nconst Navigation = ({onRouteChange, route}) => {\r\n    if(route===\"home\"){ \r\n        return (\r\n                <nav style={{display: 'flex', margin: '30px', justifyContent: \"center\"}}>\r\n        \r\n                    <div  style={{alignSelf: 'center'}}>\r\n                    <Tilty  className=\"br2 shadow-2\" \r\n                        style={{height: '90px', width: '90px',\r\n                        background: 'rgb(229, 142, 236)'}}>\r\n                            \r\n                        <div >\r\n                            <img className=\"pt1\" alt=\"\" src={brains} style={{height: '80px', width:'80px'}}/>\r\n                        </div>\r\n                        \r\n                    </Tilty>\r\n                    </div>\r\n                    <div  style={{marginLeft: \"auto\"}}>\r\n                        <input \r\n                        onClick={() => onRouteChange('signin')}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign-out\"\r\n                        style={{marginTop: \"10px\", marginBottom: \"10px\"}}\r\n                    />\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n    else {\r\n        return(\r\n            <nav style={{display: 'flex', margin: '30px', justifyContent: \"center\"}}>\r\n        \r\n            <div  style={{alignSelf: 'center'}}>\r\n            <Tilty  className=\"br2 shadow-2\" \r\n                style={{height: '90px', width: '90px',\r\n                background: 'linear-gradient(89deg, #FF5EDF 0%, #2fcac0 100%)'}}>\r\n                    \r\n                <div >\r\n                    <img className=\"pt1\" alt=\"\" src={brains} style={{height: '80px', width:'80px'}}/>\r\n                </div>\r\n                \r\n            </Tilty>\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation; ","import React from 'react';\r\n\r\nconst ImageLinkForm = ({onInputChange, onbuttonSubmit}) => {\r\n    return(\r\n        <div style={{displa: 'flex'}}>\r\n            <p className='f3'>{`Type or copy a link of an Image to detect a Face`}</p>\r\n            <div className='center'>\r\n                <div className='form center' >\r\n                    <div \r\n                    className='pa4 center br4 shadow-5 center' \r\n                    style={{width: '70%', display: 'flex'}}\r\n                    >\r\n                        <input \r\n                        className='f4 pa2 center' \r\n                        style={{width: '70%'}} \r\n                        onChange={onInputChange} \r\n                        />\r\n                        \r\n                        <button \r\n                        className='grow f4 link ph3 dib white bg-ligh ' \r\n                        style={{color: 'black', width: '30%', fontSize: '2vw'}}\r\n                        onClick={(e)=>{onbuttonSubmit(e)}}\r\n                        >\r\n                            Detect\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from \"react\";\r\n\r\n\r\nconst Rank = ({entries, name}) => {\r\n    return(\r\n        <div>\r\n            <div className=\"white f3\" style={{marginTop: \"70px\"}}>{`${name}, Your no. of entries are....`}</div>\r\n            <div className=\"white f1\">{entries}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React, {useState, useRef} from \"react\";\r\n\r\nconst SignIn = ({ onRouteChange, loadUser }) => {\r\n\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const inputEl = useRef(null);\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        fetch(\" https://nameless-citadel-65461.herokuapp.com/signin\", {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: Email,\r\n                password: Password\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            if(!Email || !Password){\r\n                inputEl.current.innerHTML = \"All fields are required\";\r\n            }\r\n            else if(user.id){\r\n                loadUser(user);\r\n                onRouteChange('home');\r\n            }else{\r\n                inputEl.current.innerHTML = \"Invalid Input or Wrong credentials\";\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <article className=\"br3 ba mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\" style={{marginTop: \"70px\"}}>\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure \" onSubmit={onFormSubmit}>\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div  ref={inputEl} style={{color: \"white\"}}> </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                            type=\"email\" \r\n                            name=\"email-address\"  \r\n                            id=\"email-address\"\r\n                            onChange={onEmailChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange={onPasswordChange}\r\n                        />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick={(e) => {onSubmit(e)}}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Sign in\"\r\n                        style={{marginTop: \"10px\", marginBottom: \"10px\"}}\r\n                    />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3 \">\r\n                    <a \r\n                    style={{ textDecorationLine: \"underline\",\r\n                    textDecorationStyle: \"double\"}}\r\n                    onClick={() => onRouteChange('register')} href=\"#0\" \r\n                    className=\"f5 link dim black db\"\r\n                    >Register\r\n                    </a>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState} from \"react\";\r\n\r\n// const SignIn = ({ onRouteChange }) => {\r\n\r\n//     const[email, setEmail] = useState(\"\");\r\n//     const[Password, setPassword] = useState(\"\");\r\n\r\n//     onNameChange = (event) => {\r\n//         setEmail(event.target.value);\r\n//     }\r\n\r\n//     onPasswordChange = (event) => {\r\n//         setPassword(event.target.value);\r\n//     }\r\n\r\n//     return(\r\n//         <article className=\"br3 ba mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\" style={{marginTop: \"70px\"}}>\r\n//             <main className=\"pa4 black-80\">\r\n//                 <form className=\"measure \">\r\n//                     <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n//                     <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n//                     <div className=\"mt3\">\r\n//                         <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n//                         <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n//                     </div>\r\n//                     <div className=\"mv3\">\r\n//                         <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n//                         <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n//                     </div>\r\n//                     </fieldset>\r\n//                     <div className=\"\">\r\n//                     <input \r\n//                         onClick={() => onRouteChange('home')}\r\n//                         className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n//                         type=\"submit\" \r\n//                         value=\"Sign in\"\r\n//                         style={{marginTop: \"10px\", marginBottom: \"10px\"}}\r\n//                     />\r\n//                     </div>\r\n//                     <div className=\"lh-copy mt3 \">\r\n//                     <a \r\n//                         style={{ textDecorationLine: \"underline\",\r\n//                             textDecorationStyle: \"double\"}}\r\n//                         onClick={() => onRouteChange('register')} href=\"#0\" \r\n//                         className=\"f5 link dim black db\"\r\n//                     >Register\r\n//                     </a>\r\n//                     </div>\r\n//                 </form>\r\n//             </main>\r\n//         </article>\r\n//     );\r\n// }\r\n\r\n// export default SignIn;","import React, {useState, useRef} from \"react\";\r\n\r\nconst Register = ({ onRouteChange, loadUser }) => {\r\n\r\n    const [Name, setName] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const inputEl = useRef(null);\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if(!Name || !Email || !Password){\r\n            inputEl.current.innerHTML = \"All fields are required\";\r\n        }\r\n        else{\r\n            fetch(\" https://nameless-citadel-65461.herokuapp.com/register\", {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name: Name,\r\n                    email: Email,\r\n                    password: Password\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                if(user.id){\r\n                    loadUser(user);\r\n                    onRouteChange('signin');\r\n                }\r\n                else{\r\n                    inputEl.current.innerHTML = \"Invalid input or email already used\";\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <article className=\"br3 ba mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\" style={{marginTop: \"70px\"}} >\r\n            <main className=\"pa4 black-80\">\r\n                <form className=\"measure \" onSubmit={onFormSubmit}>\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                    <div ref={inputEl} style={{color: \"white\"}}> </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-90\" \r\n                        type=\"name\" \r\n                        name=\"name\"  \r\n                        id=\"name\"\r\n                        onChange={onNameChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"email\" \r\n                        name=\"email-address\"  \r\n                        id=\"email-address\"\r\n                        onChange={onEmailChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                        type=\"password\" \r\n                        name=\"password\"  \r\n                        id=\"password\"\r\n                        onChange={onPasswordChange}\r\n                        />\r\n                    </div>\r\n\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                        onClick={(e) => {onSubmit(e)}}\r\n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                        type=\"submit\" \r\n                        value=\"Register\"\r\n                        style={{marginTop: \"10px\", marginBottom: \"10px\"}}\r\n                    />\r\n                    </div>\r\n                    <div className=\"lh-copy\">\r\n                    <a \r\n                    style={{ textDecorationLine: \"underline\",\r\n                    textDecorationStyle: \"double\"}}\r\n                    onClick={() => onRouteChange('signin')} href=\"#0\" \r\n                    className=\"f5 link dim black db\"\r\n                    >Back\r\n                    </a>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport \"./faceBorder.css\";\r\nimport \"tachyons\";\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n \r\n    const faces = box.map((face, i) => {\r\n        return <div \r\n        key={i} \r\n        className='bounding-box' \r\n        style={{top: face.topRow, left: face.leftCol, bottom: face.bottomRow, right:face.rightCol}}>\r\n        </div>})\r\n    \r\n    return (\r\n    <div className='imageContent'>\r\n    <div className='imageContent2'>\r\n            <img id='inputimage' className=\"\" \r\n             alt='' src={imageUrl} width='500px' height='auto' \r\n             />\r\n            {faces}\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","// export const options={\r\n//     background: {\r\n//       color: {\r\n//         value: \"#0d47a1\",\r\n//       },\r\n//     },\r\n//     fpsLimit: 120,\r\n//     interactivity: {\r\n//       events: {\r\n//         onClick: {\r\n//           enable: true,\r\n//           mode: \"push\",\r\n//         },\r\n//         onHover: {\r\n//           enable: true,\r\n//           mode: \"repulse\",\r\n//         },\r\n//         resize: true,\r\n//       },\r\n//       modes: {\r\n//         bubble: {\r\n//           distance: 400,\r\n//           duration: 2,\r\n//           opacity: 0.8,\r\n//           size: 40,\r\n//         },\r\n//         push: {\r\n//           quantity: 4,\r\n//         },\r\n//         repulse: {\r\n//           distance: 200,\r\n//           duration: 0.4,\r\n//         },\r\n//       },\r\n//     },\r\n//     particles: {\r\n//       color: {\r\n//         value: \"#ffffff\",\r\n//       },\r\n//       links: {\r\n//         color: \"#ffffff\",\r\n//         distance: 150,\r\n//         enable: true,\r\n//         opacity: 0.5,\r\n//         width: 1,\r\n//       },\r\n//       collisions: {\r\n//         enable: true,\r\n//       },\r\n//       move: {\r\n//         direction: \"none\",\r\n//         enable: true,\r\n//         outMode: \"bounce\",\r\n//         random: false,\r\n//         speed: 6,\r\n//         straight: false,\r\n//       },\r\n//       number: {\r\n//         density: {\r\n//           enable: true,\r\n//           area: 800,\r\n//         },\r\n//         value: 80,\r\n//       },\r\n//       opacity: {\r\n//         value: 0.5,\r\n//       },\r\n//       shape: {\r\n//         type: \"circle\",\r\n//       },\r\n//       size: {\r\n//         random: true,\r\n//         value: 5,\r\n//       },\r\n//     },\r\n//     detectRetina: true,\r\n//   }\r\n\r\n\r\n\r\n export const options = {\r\n    \r\n    fpsLimit: 120,\r\n    interactivity: {\r\n      events: {\r\n        onHover: {\r\n          enable: true,\r\n          mode: \"repulse\",\r\n        },\r\n        resize: true,\r\n      },\r\n      modes: {\r\n        bubble: {\r\n          distance: 400,\r\n          duration: 2,\r\n          opacity: 0.8,\r\n          size: 40,\r\n        },\r\n        push: {\r\n          quantity: 4,\r\n        },\r\n        repulse: {\r\n          distance: 200,\r\n          duration: 0.4,\r\n        },\r\n      },\r\n    },\r\n    particles: {\r\n      background: {\r\n        color: \"linear-gradient(89deg, #FF5EDF 0%, #2fcac0 100%);\"\r\n      },\r\n      links: {\r\n        background: {\r\n          color: \"#fff\"\r\n        },\r\n        distance: 50,\r\n        enable: true,\r\n        opacity: 0.5,\r\n        width: 1,\r\n      },\r\n      move: {\r\n        direction: \"none\",\r\n        enable: true,\r\n        outMode: \"bounce\",\r\n        random: false,\r\n        speed: 1,\r\n        straight: false,\r\n      },\r\n      number: {\r\n        density: {\r\n          enable: true,\r\n          area: 900,\r\n        },\r\n        value: 90,\r\n      },\r\n      opacity: {\r\n        value: 0.5,\r\n      },\r\n      shape: {\r\n        type: \"circle\",\r\n      },\r\n      size: {\r\n        random: true,\r\n        value: 5,\r\n      },\r\n    },\r\n    detectRetina: true,\r\n};\r\n\r\n\r\n//original options with collision\r\n\r\n// export const options = {\r\n//     background: {\r\n//       color: {\r\n//         value: \"#0d47a1\",\r\n//       },\r\n//     },\r\n//     fpsLimit: 120,\r\n//     interactivity: {\r\n//       events: {\r\n//         onClick: {\r\n//           enable: true,\r\n//           mode: \"push\",\r\n//         },\r\n//         onHover: {\r\n//           enable: true,\r\n//           mode: \"repulse\",\r\n//         },\r\n//         resize: true,\r\n//       },\r\n//       modes: {\r\n//         bubble: {\r\n//           distance: 400,\r\n//           duration: 2,\r\n//           opacity: 0.8,\r\n//           size: 40,\r\n//         },\r\n//         push: {\r\n//           quantity: 4,\r\n//         },\r\n//         repulse: {\r\n//           distance: 200,\r\n//           duration: 0.4,\r\n//         },\r\n//       },\r\n//     },\r\n//     particles: {\r\n//       background: {\r\n//         color: \"linear-gradient(89deg, #FF5EDF 0%, #2fcac0 100%);\"\r\n//       },\r\n//       links: {\r\n//         background: {\r\n//           color: \"#fff\"\r\n//         },\r\n//         distance: 50,\r\n//         enable: true,\r\n//         opacity: 0.5,\r\n//         width: 1,\r\n//       },\r\n//       collisions: {\r\n//         enable: true,\r\n//       },\r\n//       move: {\r\n//         direction: \"none\",\r\n//         enable: true,\r\n//         outMode: \"bounce\",\r\n//         random: false,\r\n//         speed: 3,\r\n//         straight: false,\r\n//       },\r\n//       number: {\r\n//         density: {\r\n//           enable: true,\r\n//           area: 800,\r\n//         },\r\n//         value: 150,\r\n//       },\r\n//       opacity: {\r\n//         value: 0.5,\r\n//       },\r\n//       shape: {\r\n//         type: \"circle\",\r\n//       },\r\n//       size: {\r\n//         random: true,\r\n//         value: 5,\r\n//       },\r\n//     },\r\n//     detectRetina: true,\r\n// };","import './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/imagelinkform/Rank.js';\nimport SignIn from './components/signin/SignIn.js';\nimport Register from './components/register/Register.js';\nimport Particles from \"react-tsparticles\";\nimport React from 'react';\nimport FaceRecognition from \"./components/faceRecognition/FaceRecognition\";\nimport {options} from './particleOption';\n\n\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: [],\n      route: \"signin\",\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // componentDidMount(){\n  //   fetch(\"https://nameless-citadel-65461.herokuapp.com\")\n  //   .then(res => res.json())\n  //   .then(data => console.log(data));\n  // }\n\n  particlesInit = (main) => {\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  };\n\n  particlesLoaded = (container) => {\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions.map( (box) => { return box.region_info.bounding_box})\n    \n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const box = clarifaiFace.map((face) => {\n      return {\n      leftCol: face.left_col * width,\n      topRow: face.top_row * height,\n      rightCol: width - (face.right_col * width),\n      bottomRow: height - (face.bottom_row * height)\n      }\n    });\n    return box;\n  }\n\n  displayFaceBox = (box) => {\n    \n    this.setState({box: box})\n  }\n\n//set input\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n//Clarifai initialisation and set imageUrl \n  onbuttonSubmit = (e) => {\n    e.preventDefault();\n    this.setState({imageUrl : this.state.input})\n    if(this.state.input!=\"\"){\n    fetch('https://nameless-citadel-65461.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(res => res.json())\n      .then(res => {\n        if(res){\n          fetch(\" https://nameless-citadel-65461.herokuapp.com/image\", {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        })\n        .then(res => res.json())\n        .then(count => {\n          if(this.state.input){\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          }\n        })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(res))\n      })\n      .catch(err => console.log(err))\n    }\n  }\n//function for set change to signIn & signout\n\n  onRouteChange = (route) => {\n    if(route==='signin'){\n      this.setState({imageUrl: \"\"})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n  \n    return (\n      <div className=\"App\">\n\n      <Particles className='particles'\n            id=\"tsparticles\"\n            init={this.particlesInit}\n            loaded={this.particlesLoaded}\n            options={options}\n          />\n          <Navigation onRouteChange={this.onRouteChange} route={this.state.route}/>\n\n          { \n            this.state.route==\"signin\" \n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n              : (\n                  this.state.route==\"register\"\n                    ? <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                    : <div>\n                        <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                      <ImageLinkForm \n                        onInputChange={this.onInputChange} \n                        onbuttonSubmit={this.onbuttonSubmit}\n                        />\n                      <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/>\n                    </div>\n                )\n          }\n      </div>\n    );}\n}\n\nexport default App;\n\n\n{/* \"a403429f2ddf4b49b307e318f00e528b\" */}\n{/* response.outputs[0].data.regions[0].region_info.bounding_box */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}